(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{233:function(t,s,a){"use strict";a.r(s);var n=a(28),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#library"}},[t._v("#")]),t._v(" Library")]),t._v(" "),a("p",[t._v("声明文件的书写方式，取决于这个库类的引用方式：")]),t._v(" "),a("p",[t._v("将 TypeScript 的声明文件表示为库类型，这里声明文件提示我们：")]),t._v(" "),a("ul",[a("li",[t._v("结构的用法")]),t._v(" "),a("li",[t._v("代码来识别结构")])]),t._v(" "),a("h2",{attrs:{id:"让我从-jquery-开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#让我从-jquery-开始"}},[t._v("#")]),t._v(" 让我从 jQuery 开始")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("引入脚本的方式：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://a.great.cdn.for/someLib.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如今，最流行的可全局访问的库实际上是作为UMD库编写的（请参见下文）。UMD库文档很难与全局库文档区分开。在编写全局声明文件之前，请确保该库实际上不是UMD。")])]),t._v(" "),a("h2",{attrs:{id:"从代码中识别全局库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从代码中识别全局库"}},[t._v("#")]),t._v(" 从代码中识别全局库")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGreeting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hellom "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者是这样")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("createGreeting")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello. "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("有过学习javascript 模块化的都知道，最好是不要使用全局变量，容易造造成污染")]),t._v(" "),a("p",[t._v("全局：")]),t._v(" "),a("ul",[a("li",[t._v("var")]),t._v(" "),a("li",[t._v("function")]),t._v(" "),a("li",[t._v("window.xxx")]),t._v(" "),a("li",[t._v("document or window 的存在")])]),t._v(" "),a("p",[t._v("使用模块化的有一下的字眼：")]),t._v(" "),a("ul",[a("li",[t._v("require")]),t._v(" "),a("li",[t._v("define")]),t._v(" "),a("li",[t._v("var fs = require('fs')")]),t._v(" "),a("li",[t._v("others")])]),t._v(" "),a("h2",{attrs:{id:"定义一个全局的声明文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义一个全局的声明文件"}},[t._v("#")]),t._v(" 定义一个全局的声明文件")]),t._v(" "),a("p",[a("code",[t._v("global.d.ts")]),t._v(" 定义一个实示例库。注意全局的一定注意命名冲突。")]),t._v(" "),a("h2",{attrs:{id:"模块化库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化库"}},[t._v("#")]),t._v(" 模块化库")]),t._v(" "),a("p",[t._v("TS 中主要是两个模块化方案：")]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript 2015 规范")]),t._v(" "),a("li",[t._v("CommonJS 规范")])]),t._v(" "),a("p",[t._v("一些书写的变化：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in CommonJS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requrie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in TypeScript or ES2015")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("import 是解构的语法，而 var是赋值的语法。")]),t._v(" "),a("p",[t._v("模块化的库中，一般是不会有 window或者global等全局字样的。模块化中常用的有：")]),t._v(" "),a("ul",[a("li",[t._v("require")]),t._v(" "),a("li",[t._v("define")]),t._v(" "),a("li",[t._v("import * as a from 'b'")]),t._v(" "),a("li",[t._v("export x;")]),t._v(" "),a("li",[t._v("exports")]),t._v(" "),a("li",[t._v("module.exports")])]),t._v(" "),a("h2",{attrs:{id:"umd-模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umd-模块化"}},[t._v("#")]),t._v(" umd 模块化")]),t._v(" "),a("p",[t._v("认识 umd 模块的时候，我们知道会还有三个判断：")]),t._v(" "),a("p",[t._v("首先判断 "),a("code",[t._v("define")]),t._v(" 是不是一个函数，其次判断 module 是不是一个 object 同时看 module.exports 是不是存在的就只能判断是是不是 commonJS 模块，然后就是 factory 函数进行处理")])])}),[],!1,null,null,null);s.default=r.exports}}]);