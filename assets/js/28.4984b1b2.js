(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{243:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"十一、symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十一、symbol"}},[s._v("#")]),s._v(" 十一、Symbol")]),s._v(" "),a("p",[s._v("自ECMAScript 2015起，"),a("code",[s._v("symbol")]),s._v("成为了一种新的原生类型，就像"),a("code",[s._v("number")]),s._v("和"),a("code",[s._v("string")]),s._v("一样。")]),s._v(" "),a("p",[a("code",[s._v("symbol")]),s._v("类型的值是通过"),a("code",[s._v("Symbol")]),s._v("构造函数创建的。")]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// optional string key")]),s._v("\n")])])]),a("p",[s._v("Symbols是不可改变且唯一的。")]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nsym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" sym3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false, symbols are unique")]),s._v("\n")])])]),a("p",[s._v("像字符串一样，symbols也可以被用做对象属性的键。")]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "value"')]),s._v("\n")])])]),a("p",[s._v("Symbols也可以与计算出的属性名声明相结合来声明对象的属性和类成员。")]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" getClassNameSymbol "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("getClassNameSymbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" className "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("getClassNameSymbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "C"')]),s._v("\n")])])]),a("h1",{attrs:{id:"众所周知的symbols-well-known-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#众所周知的symbols-well-known-symbols"}},[s._v("#")]),s._v(" 众所周知的Symbols Well-known Symbols")]),s._v(" "),a("p",[s._v("除了用户定义的symbols，还有一些已经众所周知的内置symbols。 内置symbols用来表示语言内部的行为。")]),s._v(" "),a("p",[s._v("以下为这些symbols的列表：")]),s._v(" "),a("h2",{attrs:{id:"symbol-hasinstance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-hasinstance"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.hasInstance")])]),s._v(" "),a("p",[s._v("方法，会被instanceof运算符调用。构造器对象用来识别一个对象是否是其实例。")]),s._v(" "),a("h2",{attrs:{id:"symbol-isconcatspreadable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-isconcatspreadable"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.isConcatSpreadable")])]),s._v(" "),a("p",[s._v("布尔值，表示当在一个对象上调用"),a("code",[s._v("Array.prototype.concat")]),s._v("时，这个对象的数组元素是否可展开。")]),s._v(" "),a("h2",{attrs:{id:"symbol-iterator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-iterator"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.iterator")])]),s._v(" "),a("p",[s._v("方法，被"),a("code",[s._v("for-of")]),s._v("语句调用。返回对象的默认迭代器。")]),s._v(" "),a("h2",{attrs:{id:"symbol-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-match"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.match")])]),s._v(" "),a("p",[s._v("方法，被"),a("code",[s._v("String.prototype.match")]),s._v("调用。正则表达式用来匹配字符串。")]),s._v(" "),a("h2",{attrs:{id:"symbol-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-replace"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.replace")])]),s._v(" "),a("p",[s._v("方法，被"),a("code",[s._v("String.prototype.replace")]),s._v("调用。正则表达式用来替换字符串中匹配的子串。")]),s._v(" "),a("h2",{attrs:{id:"symbol-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-search"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.search")])]),s._v(" "),a("p",[s._v("方法，被"),a("code",[s._v("String.prototype.search")]),s._v("调用。正则表达式返回被匹配部分在字符串中的索引。")]),s._v(" "),a("h2",{attrs:{id:"symbol-species"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-species"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.species")])]),s._v(" "),a("p",[s._v("函数值，为一个构造函数。用来创建派生对象。")]),s._v(" "),a("h2",{attrs:{id:"symbol-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-split"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.split")])]),s._v(" "),a("p",[s._v("方法，被"),a("code",[s._v("String.prototype.split")]),s._v("调用。正则表达式来用分割字符串。")]),s._v(" "),a("h2",{attrs:{id:"symbol-toprimitive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-toprimitive"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.toPrimitive")])]),s._v(" "),a("p",[s._v("方法，被ToPrimitive抽象操作调用。把对象转换为相应的原始值。")]),s._v(" "),a("h2",{attrs:{id:"symbol-tostringtag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-tostringtag"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.toStringTag")])]),s._v(" "),a("p",[s._v("方法，被内置方法"),a("code",[s._v("Object.prototype.toString")]),s._v("调用。返回创建对象时默认的字符串描述。")]),s._v(" "),a("h2",{attrs:{id:"symbol-unscopables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-unscopables"}},[s._v("#")]),s._v(" "),a("code",[s._v("Symbol.unscopables")])]),s._v(" "),a("p",[s._v("对象，它自己拥有的属性会被with作用域排除在外。")])])}),[],!1,null,null,null);t.default=e.exports}}]);